// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Line2u.Models2;

namespace Line2u.Data2
{
    public partial class Line2uDataContext2 : DbContext
    {
        public Line2uDataContext2()
        {
        }

        public Line2uDataContext2(DbContextOptions<Line2uDataContext2> options)
            : base(options)
        {
        }

        public virtual DbSet<XAccount> XAccounts { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<XAccount>(entity =>
            {
                entity.HasKey(e => e.AccountId)
                    .HasName("PK_Account_12");

                entity.ToTable("xAccount");

                entity.Property(e => e.AccountId)
                    .HasColumnName("Account_ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AccessTokenLineNotify).HasMaxLength(200);

                entity.Property(e => e.AccountAddress)
                    .HasColumnName("Account_ADDRESS")
                    .HasMaxLength(100);

                entity.Property(e => e.AccountBirthday)
                    .HasColumnName("Account_BIRTHDAY")
                    .HasColumnType("datetime");

                entity.Property(e => e.AccountDomicileAddress)
                    .HasColumnName("Account_Domicile_ADDRESS")
                    .HasMaxLength(100);

                entity.Property(e => e.AccountEmail)
                    .HasColumnName("Account_EMAIL")
                    .HasMaxLength(100);

                entity.Property(e => e.AccountGroup)
                    .HasColumnName("Account_Group")
                    .HasMaxLength(100);

                entity.Property(e => e.AccountIdcard)
                    .HasColumnName("Account_IDCARD")
                    .HasMaxLength(20);

                entity.Property(e => e.AccountMobile)
                    .HasColumnName("Account_MOBILE")
                    .HasMaxLength(20);

                entity.Property(e => e.AccountName)
                    .HasColumnName("Account_NAME")
                    .HasMaxLength(20);

                entity.Property(e => e.AccountNickname)
                    .HasColumnName("Account_NICKNAME")
                    .HasMaxLength(20);

                entity.Property(e => e.AccountNo)
                    .HasColumnName("Account_NO")
                    .HasMaxLength(20);

                entity.Property(e => e.AccountOrganization)
                    .HasColumnName("Account_Organization")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.AccountRole)
                    .HasColumnName("Account_Role")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AccountSex)
                    .HasColumnName("Account_SEX")
                    .HasMaxLength(20);

                entity.Property(e => e.AccountSite)
                    .HasColumnName("Account_Site")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.AccountTel)
                    .HasColumnName("Account_TEL")
                    .HasMaxLength(20);

                entity.Property(e => e.AccountType)
                    .HasColumnName("Account_Type")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CancelFlag)
                    .HasColumnName("CANCEL_FLAG")
                    .HasMaxLength(1);

                entity.Property(e => e.ClinicId)
                    .HasColumnName("Clinic_ID")
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.Comment).HasColumnType("text");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("CREATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("CREATE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.EmployeeGuid)
                    .HasColumnName("Employee_Guid")
                    .HasMaxLength(40);

                entity.Property(e => e.EndDate)
                    .HasColumnName("End_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ErrorLogin)
                    .HasColumnName("errorLogin")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.FarmGuid)
                    .HasColumnName("FARM_GUID")
                    .HasMaxLength(40)
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Guid)
                    .HasColumnName("GUID")
                    .HasMaxLength(40)
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.IsLineAccount)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.LastLoginDate)
                    .HasColumnName("LastLogin_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Lastlogin)
                    .HasColumnName("lastlogin")
                    .HasColumnType("datetime");

                entity.Property(e => e.Lastuse)
                    .HasColumnName("lastuse")
                    .HasColumnType("datetime");

                entity.Property(e => e.LineEmail)
                    .HasColumnName("Line_Email")
                    .HasMaxLength(50);

                entity.Property(e => e.LineId)
                    .HasColumnName("Line_ID")
                    .HasMaxLength(100);

                entity.Property(e => e.LineName)
                    .HasColumnName("Line_Name")
                    .HasMaxLength(100);

                entity.Property(e => e.LineOfficialId)
                    .HasColumnName("Line_Official_ID")
                    .HasMaxLength(100);

                entity.Property(e => e.LinePicture)
                    .HasColumnName("Line_Picture")
                    .HasMaxLength(100);

                entity.Property(e => e.LineQrPath)
                    .HasColumnName("Line_QR_Path")
                    .HasMaxLength(100);

                entity.Property(e => e.LocalLogin)
                    .HasColumnName("Local_Login")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PAccount)
                    .HasColumnName("P_Account")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PAdmin)
                    .HasColumnName("P_Admin")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PClinic)
                    .HasColumnName("P_Clinic")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PCodeType)
                    .HasColumnName("P_CodeType")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PEnquiry)
                    .HasColumnName("P_Enquiry")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PEnquiryResult)
                    .HasColumnName("P_Enquiry_Result")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PPatient)
                    .HasColumnName("P_Patient")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PPhotoComment)
                    .HasColumnName("P_PhotoComment")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PRequisitionConfirm)
                    .HasColumnName("P_RequisitionConfirm")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PageSizeSetting)
                    .HasColumnName("PageSize_Setting")
                    .HasMaxLength(10);

                entity.Property(e => e.PhotoPath)
                    .HasColumnName("Photo_Path")
                    .HasMaxLength(100);

                entity.Property(e => e.RoleId)
                    .HasColumnName("Role_ID")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.SiteGuid2)
                    .HasColumnName("SITE_GUID2")
                    .HasMaxLength(40);

                entity.Property(e => e.SiteGuid3)
                    .HasColumnName("SITE_GUID3")
                    .HasMaxLength(40);

                entity.Property(e => e.SiteId)
                    .HasColumnName("SITE_ID")
                    .HasMaxLength(100);

                entity.Property(e => e.SiteName)
                    .HasColumnName("SITE_NAME")
                    .HasMaxLength(100);

                entity.Property(e => e.SiteTel)
                    .HasColumnName("SITE_TEL")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.StartDate)
                    .HasColumnName("Start_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Status)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Token)
                    .HasColumnName("token")
                    .HasMaxLength(100);

                entity.Property(e => e.TypeId)
                    .HasColumnName("Type_ID")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Uid)
                    .HasColumnName("UID")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("UPDATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("UPDATE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upwd)
                    .IsRequired()
                    .HasColumnName("UPWD")
                    .HasMaxLength(200);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}